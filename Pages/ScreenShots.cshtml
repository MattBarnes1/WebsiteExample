@page
@inject UserManager<UserData> myUser;
@model WebApplication5.Pages.ScreenShotsModel
@{
    ViewData["Title"] = "Screen Shots";
}

<h2>Screen Shots</h2>

<div class="split-email-Receive">

    @for (int i = 0; i < myUser.Users.Count(); i++)
    {
        <div id="@myUser.Users.ElementAt(i).UserName">
            <div class="card">
                <div class="card-header">
                    <h5 class="mb-0">
                        <button class="btn btn-link" data-toggle="collapse" data-target="#@i" aria-expanded="true" aria-controls="collapseOne">
                            @myUser.Users.ElementAt(i).UserName
                        </button>
                    </h5>
                </div>
            </div>
        </div>
    }

    @for (int i = 0; i < myUser.Users.Count(); i++)
    {
        <div id="@i" class="collapse" aria-labelledby="headingTwo" data-parent="#@myUser.Users.ElementAt(i).UserName">
            <div class="card-body">
                @{


                }


            </div>
        </div>
    }



</div>
<div class="split-email-ReadWrite">
    @if (RouteData.Values["UserName"] != null)
    {
        var myValue = myUser.FindByNameAsync((String)RouteData.Values["UserName"]);
        String aString = @FileEditingService.ReadFileAsString("~/Home/" + myValue.Id + "/Screens/" + (String)RouteData.Values["Blog"]);
        @Html.Raw(aString);
    }
</div>

